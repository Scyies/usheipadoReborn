import classNames from "classnames";
import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useState } from "react";
import { toast } from "react-toastify";
import { useSetRecoilState } from "recoil";
import { IToken, userId } from "../atom/atom";
import Button from "../components/Button";
import Input from "../components/Input";
import { supabase } from "./supa";

export type Dias = {
  id: string;
  name: string;
  created_at: Date;
};

const Home: NextPage = () => {
  const [formType, setFormType] = useState<"login" | "sigin">("login");
  const setLoggedUser = useSetRecoilState(userId)

  const router = useRouter();

  async function handleSignIn(event: React.FormEvent<HTMLFormElement>) {
    event.preventDefault();

    const formData = new FormData(event.target as HTMLFormElement);
    const input = Object.fromEntries(formData);

    if (formType === "sigin") {
      const { data, error } = await supabase.auth.signUp({
        email: String(input.email),
        password: String(input.password),
        options: {
          data: {
            name: String(input.name),
          },
        },
      });

      if (error) {
        console.log(error);
        toast.error(error.message);
        return
      }

      if (data) {
        console.log(data);
        const session = localStorage.setItem('token', JSON.stringify(data))
        setLoggedUser(data['session']?.user.id!);

        toast.success("Usu√°rio criado com sucesso!")
        router.push("/home");
      }
    }

    if (formType === "login") {

      const { data, error } = await supabase.auth.signInWithPassword({
        email: String(input.email),
        password: String(input.password),
      });

      if (error) {
        console.log(error);
        toast.error(error.message);
        return
      }

      if (data) {
        const session = localStorage.setItem('token', JSON.stringify(data))
        setLoggedUser(data['session']?.user.id!);
        toast.success("Login realizado com sucesso!")
        router.push("/home");
      }
    }
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <>
        <main className="mx-6 mt-8 flex flex-col justify-center text-center">
          <div className="relative text-black font-bold flex gap-4">
            <p className="z-20 text-black" onClick={() => setFormType("login")}>
              Entrar
            </p>
            <p className="z-20 text-black" onClick={() => setFormType("sigin")}>
              Cadastrar
            </p>
          </div>
          {formType === "login" ? (
            <form onSubmit={handleSignIn} className="flex flex-col gap-4">
              <label htmlFor="" className="font-bold text-black">
                E-mail
              </label>
              <Input name="email" autoComplete="off" />
              <label htmlFor="" className="font-bold text-black">
                Senha
              </label>
              <Input name="senha" type="password" autoComplete="off" />
              <Button type="submit">Entrar</Button>
            </form>
          ) : (
            <form onSubmit={handleSignIn} className="flex flex-col gap-4">
              <label htmlFor="" className="font-bold text-black">
                Nome
              </label>
              <Input name="text" autoComplete="off" />
              <label htmlFor="" className="font-bold text-black">
                E-mail
              </label>
              <Input name="email" autoComplete="off" />
              <label htmlFor="" className="font-bold text-black">
                Senha
              </label>
              <Input name="senha" type="password" autoComplete="off" />
              <Button type="submit">Entrar</Button>
            </form>
          )}
        </main>
      </>
    </div>
  );
};

export default Home;
